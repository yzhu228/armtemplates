{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": "VNet in which this VM resides"
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Subnet in which this VM resides"
            }
        },
        "vnetRg": {
            "type": "string",
            "metadata": {
                "description": "ResourceGroup name to which this vnet belongs"
            },
            "defaultValue": "[resourceGroup().name]"
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for admin"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for admin"
            }
        },
        "vmHostName": {
            "type": "string",
            "metadata": {
                "description": "Name prefix of the VM"
            }
        },
        "setupBuildTools": {
            "type": "bool",
            "metadata": {
                "description": "Should an extension be setup for build tools and IIS"
            },
            "defaultValue": false
        },
        "joinAD": {
            "type": "bool",
            "metadata": {
                "description": "Whether this VM joins the Azure AD"
            },
            "defaultValue": false
        }
    },
    "variables": {
        "publicIpName": "[format('{0}-PublicIP', parameters('vmHostName'))]",
        "pipDomainName": "[format('yz-{0}-{1}',parameters('vmHostName'), uniqueString(resourceGroup().id))]",
        "storageAccountName": "[toLower(format('yz{0}storage', parameters('vmHostName')))]",
        "shouldSetupBuildTool": "[parameters('setupBuildTools')]",
        "nicNmae": "[format('{0}-nic', parameters('vmHostName'))]"
    },
    "resources": [
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "windowsVM1 Storage Account"
            },
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage"
        },
        {
            "name": "[variables('publicIpName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "PublicIPAddress"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('pipDomainName')]"
                }
            }
        },
        {
            "name": "[variables('nicNmae')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
            ],
            "tags": {
                "displayName": "windowsVM1 Network Interface"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId(parameters('vnetRg'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('vmHostName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicNmae'))]"
            ],
            "tags": {
                "displayName": "[parameters('vmHostName')]"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A2_v2"
                },
                "osProfile": {
                    "computerName": "[parameters('vmHostName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[format('{0}-osdisk', parameters('vmHostName'))]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicNmae'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]"
                    }
                },
                "availabilitySet": {
                    "id": "/subscriptions/a272041c-6a2a-46cb-b7d3-8fe5200d48c0/resourceGroups/az104-lb/providers/Microsoft.Compute/availabilitySets/lbAvailSet"
                }
            }
        },
        {
            "condition": "[variables('shouldSetupBuildTool')]",
            "name": "[format('{0}/customScript1', parameters('vmHostName'))]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2021-03-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "customScript1 for Windows VM"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmHostName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.10",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "timestamp": 100,
                    "commandToExecute": "powershell -ExecutionPolicy Bypass -file main.ps1"
                },
                "protectedSettings": {
                    "fileUris": [
                        "https://yzhuartifacts.blob.core.windows.net/data/InstallIIS.ps1",
                        "https://yzhuartifacts.blob.core.windows.net/data/InstallBuildTools.ps1",
                        "https://yzhuartifacts.blob.core.windows.net/data/main.ps1"
                    ]
                }
            }
        }
    ],
    "outputs": {}
}